<?php
/**
 * @package     Mautic
 * @copyright   2014 Mautic, NP. All rights reserved.
 * @author      Mautic
 * @link        http://mautic.com
 * @license     GNU/GPLv3 http://www.gnu.org/licenses/gpl-3.0.html
 */

namespace Mautic\LeadBundle\Entity;

use Doctrine\ORM\QueryBuilder;
use Doctrine\ORM\Tools\Pagination\Paginator;
use Mautic\CoreBundle\Entity\CommonRepository;
use Symfony\Component\HttpKernel\Exception\NotFoundHttpException;

/**
 * LeadFieldRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LeadFieldRepository extends CommonRepository
{

    /**
     * @param $alias
     * @param $id
     * @return bool
     * @throws \Doctrine\ORM\NoResultException
     * @throws \Doctrine\ORM\NonUniqueResultException
     */
    public function checkUniqueAlias($alias, $id)
    {
        $q = $this->createQueryBuilder('l')
            ->select('count(l.id) as aliasCount')
            ->where('l.alias = :alias');
        $q->setParameter('alias', $alias);

        if (!empty($id)) {
            $q->andWhere('l.id != :id');
            $q->setParameter('id', $id);
        }

        $results = $q->getQuery()->getSingleResult();
        return $results['aliasCount'];
    }
}
