<?php
/**
 * @package     Mautic
 * @copyright   2014 Mautic, NP. All rights reserved.
 * @author      Mautic
 * @link        http://mautic.com
 * @license     GNU/GPLv3 http://www.gnu.org/licenses/gpl-3.0.html
 */

namespace Mautic\UserBundle\Entity;

use Doctrine\ORM\Tools\Pagination\Paginator;
use Doctrine\ORM\NoResultException;
use Mautic\CoreBundle\Entity\CommonRepository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends CommonRepository
{
    /**
     * Find user by username or if email matches the username
     *
     * @param $params
     * @return array
     */
    public function findByUsernameOrMatchEmail($params) {
        $q = $this
            ->createQueryBuilder('u')
            ->where('u.username = :username OR u.email = :email')
            ->setParameter('username', $params['username'])
            ->setParameter('email', $params['username'])
            ->getQuery();
        return $q->getResult();
    }

    /**
     * Retrieve a list of users
     *
     * @param array $args [start, limit, filter, orderBy, orderByDir]
     * @return Paginator
     */
    public function getUsers($args = array()) {
        $start      = array_key_exists('start', $args) ? $args['start'] : 0;
        $limit      = array_key_exists('limit', $args) ? $args['limit'] : 30;
        $filter     = array_key_exists('filter', $args) ? $args['filter'] : '';
        $orderBy    = array_key_exists('orderBy', $args) ? $args['orderBy'] : 'u.lastName, u.firstName, u.username';
        $orderByDir = array_key_exists('orderByDir', $args) ? $args['orderByDir'] : "ASC";

        $q = $this
            ->createQueryBuilder('u')
            ->select('u, r')
            ->leftJoin('u.role', 'r')
            ->orderBy($orderBy, $orderByDir)
            ->setFirstResult($start)
            ->setMaxResults($limit);

        if (!empty($filter)) {
            $q->where('u.username LIKE :filter')
                ->orWhere('u.email LIKE :filter')
                ->orWhere('u.firstName LIKE :filter')
                ->orWhere('u.lastName LIKE :filter')
                ->orWhere('u.position LIKE :filter')
                ->setParameter(':filter', '%'.$filter.'%');
        }
        $query = $q->getQuery();
        $result = new Paginator($query);
        return $result;
    }
}